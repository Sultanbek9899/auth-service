# https://peps.python.org/pep-0518/
# https://www.toml-lint.com

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = ""
version = "0.1.0"
description = ""
authors = ["Ruslan Konovalov <konovalov.rus@gmail.com>"]


[tool.poetry.dependencies]
python = "~3.11"
fastapi = "^0.87.0"
fastapi-pagination = "^0.9.3"
fastapi-sso = "0.6.2"
pydantic = {extras = ["email"], version = "^1.10.2"}
httpx = "^0.23.0"
requests = "^2.28.1"
sqlmodel = "^0.0.8"
sqladmin = "^0.1.11"
PyJWT = {extras = ["crypto"], version = "^2.4.0"}
alembic = "^1.8.0"
asyncpg = "^0.27.0"
async-lru = "^1.0.3"
passlib = "^1.7.4"
greenlet = "^2.0.2"
Authlib = "^1.0.1"
boto3 = "^1.24.26"
loguru = "^0.6.0"
uvicorn = "^0.18.2"
sentry-sdk = {extras = ["fastapi"], version = "^1.9.8"}
python-dotenv = "^0.20.0"
python-multipart = "^0.0.6"
aiohttp = "^3.8.3"
mangum = "^0.15.1"
cryptography = "^37.0.4"
bcrypt = "^4.0.0"
psycopg2-binary = "^2.9.3"
yandexcloud = "^0.205.0"


[tool.poetry.group.development.dependencies]
mypy = "0.931"
mypy-extensions = "0.4.3"
pylint = "2.3.1"
astroid = "2.4.2"
weasyprint = "52.5"
ruff = "^0.0.260"
pytest = "^7.1.3"
pytest-asyncio = "0.21.0"
poethepoet = "^0.16.4"
mkdocs = "^1.4.2"


[tool.poetry.group.lint.dependencies]
ruff = "^0.0.260"
mypy = "0.931"
mypy-extensions = "0.4.3"
pylint = "2.3.1"


[tool.poe.tasks.ruff]
cmd = "ruff app/ core/ tests/ --verbose"


[tool.ruff]
select = ["C","E","F","W","B"] # Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
ignore = ["E501","F821","E722","F405","F403","B010","B904","C417","B008","C405","F811"]
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []
line-length = 88
exclude = ["__init__.py", ".git", ".venv"]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$" # Allow unused variables when underscore-prefixed.
target-version = "py311"


[tool.ruff.mccabe]
max-complexity = 17


[tool.black]
line-length = 120
multi_line_output = 3
length_sort = true
py38 = true
include = '\.pyi?$'
exclude = [".git",".venv"]
force-exclude = ["migrations"]


[tool.isort]
src_paths = ["app", "core", "tests"]
line_length = 120
skip = ["venv", "migrations", ".git", "proto"]
multi_line_output = 3
combine_as_imports = true
include_trailing_comma = true
lines_after_imports = 2
use_parentheses = true


[tool.mypy]
python_version = 3.11
ignore_missing_imports = true
follow_imports = "silent"
pretty = true
exclude = ["tests/", "migrations/", "versions"]
disallow_incomplete_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
warn_return_any = true
strict_equality = true
plugins = "pydantic.mypy"
warn_unused_configs = true
show_error_codes = true
show_column_numbers = true
check_untyped_defs = true
strict_optional = true
disallow_any_generics = true
disallow_untyped_defs = true


[[pydantic-mypy]]
warn_required_dynamic_aliases = true
warn_untyped_fields = true
init_typed = true


[tool.pylint.MASTER]
extension-pkg-whitelist="pydantic"


[tool.pylint.FORMAT]
max-line-length = 120


[[mypy-tests."*"]] # exclude doesn't work in some cases, e.g. in VSCode integration
ignore_errors = true


[tool.pytest]
asyncio_mode = "auto"
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "*Test Test*"
filterwarnings = "ignore::DeprecationWarning"
log_level = "INFO"
markers = "freeze_time: pytest-freezegun"
addopts = "--suppress-no-test-exit-code"